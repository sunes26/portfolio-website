{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haese\\\\Documents\\\\project\\\\portfolio-website\\\\src\\\\SchemaOrg.jsx\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport portfolioData from '../data/portfolioData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchemaOrg = () => {\n  const schemaData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"Person\",\n    \"name\": portfolioData.profile.name,\n    \"url\": \"https://yourportfolio.com\",\n    \"image\": `https://yourportfolio.com${portfolioData.profile.image}`,\n    \"description\": portfolioData.profile.bio,\n    \"jobTitle\": portfolioData.profile.title,\n    \"sameAs\": [portfolioData.profile.contact.github, portfolioData.profile.contact.linkedin, portfolioData.profile.contact.portfolio],\n    \"knowsAbout\": portfolioData.skills.map(skill => skill.name),\n    \"email\": portfolioData.profile.contact.email\n  };\n\n  // 프로젝트 스키마\n  const projectsSchema = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"ItemList\",\n    \"itemListElement\": portfolioData.projects.map((project, index) => ({\n      \"@type\": \"SoftwareSourceCode\",\n      \"position\": index + 1,\n      \"name\": project.title,\n      \"description\": project.description,\n      \"codeRepository\": project.github,\n      \"programmingLanguage\": project.technologies,\n      \"url\": project.live || project.github\n    }))\n  };\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      type: \"application/ld+json\",\n      children: JSON.stringify(schemaData)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      type: \"application/ld+json\",\n      children: JSON.stringify(projectsSchema)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = SchemaOrg;\nexport default SchemaOrg;\nvar _c;\n$RefreshReg$(_c, \"SchemaOrg\");","map":{"version":3,"names":["React","Helmet","portfolioData","jsxDEV","_jsxDEV","SchemaOrg","schemaData","profile","name","image","bio","title","contact","github","linkedin","portfolio","skills","map","skill","email","projectsSchema","projects","project","index","description","technologies","live","children","type","JSON","stringify","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/haese/Documents/project/portfolio-website/src/SchemaOrg.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport portfolioData from '../data/portfolioData';\r\n\r\nconst SchemaOrg = () => {\r\n  const schemaData = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"Person\",\r\n    \"name\": portfolioData.profile.name,\r\n    \"url\": \"https://yourportfolio.com\",\r\n    \"image\": `https://yourportfolio.com${portfolioData.profile.image}`,\r\n    \"description\": portfolioData.profile.bio,\r\n    \"jobTitle\": portfolioData.profile.title,\r\n    \"sameAs\": [\r\n      portfolioData.profile.contact.github,\r\n      portfolioData.profile.contact.linkedin,\r\n      portfolioData.profile.contact.portfolio\r\n    ],\r\n    \"knowsAbout\": portfolioData.skills.map(skill => skill.name),\r\n    \"email\": portfolioData.profile.contact.email\r\n  };\r\n\r\n  // 프로젝트 스키마\r\n  const projectsSchema = {\r\n    \"@context\": \"https://schema.org\",\r\n    \"@type\": \"ItemList\",\r\n    \"itemListElement\": portfolioData.projects.map((project, index) => ({\r\n      \"@type\": \"SoftwareSourceCode\",\r\n      \"position\": index + 1,\r\n      \"name\": project.title,\r\n      \"description\": project.description,\r\n      \"codeRepository\": project.github,\r\n      \"programmingLanguage\": project.technologies,\r\n      \"url\": project.live || project.github\r\n    }))\r\n  };\r\n\r\n  return (\r\n    <Helmet>\r\n      <script type=\"application/ld+json\">\r\n        {JSON.stringify(schemaData)}\r\n      </script>\r\n      <script type=\"application/ld+json\">\r\n        {JSON.stringify(projectsSchema)}\r\n      </script>\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nexport default SchemaOrg;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,oBAAoB;AAC3C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,UAAU,GAAG;IACjB,UAAU,EAAE,oBAAoB;IAChC,OAAO,EAAE,QAAQ;IACjB,MAAM,EAAEJ,aAAa,CAACK,OAAO,CAACC,IAAI;IAClC,KAAK,EAAE,2BAA2B;IAClC,OAAO,EAAE,4BAA4BN,aAAa,CAACK,OAAO,CAACE,KAAK,EAAE;IAClE,aAAa,EAAEP,aAAa,CAACK,OAAO,CAACG,GAAG;IACxC,UAAU,EAAER,aAAa,CAACK,OAAO,CAACI,KAAK;IACvC,QAAQ,EAAE,CACRT,aAAa,CAACK,OAAO,CAACK,OAAO,CAACC,MAAM,EACpCX,aAAa,CAACK,OAAO,CAACK,OAAO,CAACE,QAAQ,EACtCZ,aAAa,CAACK,OAAO,CAACK,OAAO,CAACG,SAAS,CACxC;IACD,YAAY,EAAEb,aAAa,CAACc,MAAM,CAACC,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACV,IAAI,CAAC;IAC3D,OAAO,EAAEN,aAAa,CAACK,OAAO,CAACK,OAAO,CAACO;EACzC,CAAC;;EAED;EACA,MAAMC,cAAc,GAAG;IACrB,UAAU,EAAE,oBAAoB;IAChC,OAAO,EAAE,UAAU;IACnB,iBAAiB,EAAElB,aAAa,CAACmB,QAAQ,CAACJ,GAAG,CAAC,CAACK,OAAO,EAAEC,KAAK,MAAM;MACjE,OAAO,EAAE,oBAAoB;MAC7B,UAAU,EAAEA,KAAK,GAAG,CAAC;MACrB,MAAM,EAAED,OAAO,CAACX,KAAK;MACrB,aAAa,EAAEW,OAAO,CAACE,WAAW;MAClC,gBAAgB,EAAEF,OAAO,CAACT,MAAM;MAChC,qBAAqB,EAAES,OAAO,CAACG,YAAY;MAC3C,KAAK,EAAEH,OAAO,CAACI,IAAI,IAAIJ,OAAO,CAACT;IACjC,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA,CAACH,MAAM;IAAA0B,QAAA,gBACLvB,OAAA;MAAQwB,IAAI,EAAC,qBAAqB;MAAAD,QAAA,EAC/BE,IAAI,CAACC,SAAS,CAACxB,UAAU;IAAC;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACT9B,OAAA;MAAQwB,IAAI,EAAC,qBAAqB;MAAAD,QAAA,EAC/BE,IAAI,CAACC,SAAS,CAACV,cAAc;IAAC;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GA3CI9B,SAAS;AA6Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}